extends layout

block scripts
    script(type='text/javascript').
        function confirmUnsubscribe() {
            return confirm("This action will render the current API key unusable. Are you sure you want to unsubscribe from the API?");
        }
        function confirmDeleteSubscriptions() {
            if (confirm("This action will delete ALL subscriptions to the current API. Are you 100% sure you want to do this?"))
                return confirm("Please confirm once more that you really want to delete all current subscriptions.");
            return false;
        }

block bodyScripts
    script(type='text/javascript').
        $(window).on('load', function () {
        // Log the window location to the console
        var apiEndpoints = [
            "cortellis-np-drugs-api",
            "cortellis-np-companies-api",
            "cortellis-np-sources-api"
        ];

            // Check if the window location includes "apis/cortellies-api-collection"
            for (var i = 0; i < apiEndpoints.length; i++) {
                if (window.location.href.includes("apis/" + apiEndpoints[i])) {
                    // Hide the elements with the specified IDs
                    $(".custom-hide").hide();
                    break; // exit the loop if a match is found
                }
            }
        });

block content
    .jumbotron.wicked-api-title
        .container.wicked-title-container
            .row
                .col-md-8
                    h1= title
                    p!= apiInfo.desc
                .col-md-4
                    br
                    if (apiInfo.auth == 'oauth2')
                        img(src="/images/oauth2-icon-64.png" align="right" title="API is secured via OAuth 2.0")
                    else if (!apiInfo.auth || apiInfo.auth == 'key-auth')
                        img(src="/images/key-icon-64.png" align="right" title="API is secured with API keys")
    
    .container.wicked-container

        if apiInfo.deprecated
            .panel.panel-danger
                .panel-heading
                    h4.panel-title API deprecated
                .panel-body
                    p.
                        This API has been deprecated by the API Portal maintainers. This means it can no longer be subscribed to.
                        Existing subscriptions are still valid.

        if authUser || !apiInfo.requiredGroup                
            .panel.panel-default
                .panel-heading
                    +panelTitle('API Settings', '/help/api')
                .panel-body
                    if apiUris.length > 1
                        label API URLs:
                    else
                        label API URL:
                    br
                    each apiUri, i in apiUris
                        p
                            input(readonly type='string' value=apiUri style='font-family: monospace;').form-control
                    if apiInfo.authMethods && apiInfo.authMethods.length > 0 && apiInfo.auth == 'oauth2'
                        br
                        if (apiInfo.authMethods.length == 1)
                            label Authentication Method:
                        else
                            label Authentication Methods:
                            p Any of the following Authentication Methods can be used to retrieve an access token for the API.

                        -var onlyClientCredentials = apiInfo.settings && apiInfo.settings.enable_client_credentials && !(apiInfo.settings.enable_password_grant || apiInfo.settings.enable_implicit_grant || apiInfo.settings.enable_authorization_code)
                        if onlyClientCredentials
                            p.
                                <b>Note:</b> This API only supports the <a href="/help/oauth2_client_credentials" target="_blank">Client Credentials</a> flow.
                                This means that you will log in only using your application's client ID and client secret, without actually authenticating a
                                user. In effect, any <code>/token</code> end point of the below Authentication Method(s) can be used for that.
                            br
                   
                        for authMethod in apiInfo.authMethods
                            .panel.panel-success
                                .panel-heading
                                    +panelTitle(authMethod.friendlyShort + ' (' + authMethod.name + ')', null, '#auth_' + authMethod.name)
                                div(id=`auth_${authMethod.name}`).collapse.panel-collapse
                                    .panel-body
                                        p #{authMethod.friendlyLong}
                                        if authMethod.config.authorizeEndpoint && !onlyClientCredentials
                                            input(readonly type='string' value=authMethod.config.authorizeEndpoint style='font-family: monospace;').form-control
                                            p.small Authorization Endpoint
                                        if authMethod.config.tokenEndpoint
                                            input(readonly type='string' value=authMethod.config.tokenEndpoint style='font-family: monospace;').form-control
                                            p.small Token Endpoint
                                        if authMethod.config.profileEndpoint && !onlyClientCredentials
                                            input(readonly type='string' value=authMethod.config.profileEndpoint style='font-family: monospace;').form-control
                                            p.small Profile Endpoint

                    if apiInfo.hasProtectedAuthMethods
                        .panel.panel-success
                            .panel-heading
                                +panelTitle('Other Auth Methods', null, '#auth_other')
                            div(id='auth_other').collapse.panel-collapse
                                .panel-body
                                    p.
                                        This API also has other authentication methods. Please contact the API Portal administrator to get additional information
                                        on the endpoint URLs, in case you need them.
                    
                    if apiInfo.auth == "oauth2"
                        label Authorization Flows (OAuth2):

                        p This API supports the following OAuth2 authorization flows:

                        ul
                            if apiInfo.settings && apiInfo.settings.enable_client_credentials
                                li <a href="/help/oauth2_client_credentials" target="_blank">Client Credentials</a>
                            if apiInfo.settings && apiInfo.settings.enable_password_grant
                                li <a href="/help/oauth2_password_grant" target="_blank">Resource Owner Password Grant</a>
                            if apiInfo.settings && apiInfo.settings.enable_authorization_code
                                li <a href="/help/oauth2_authorization_code" target="_blank">Autorization Code Grant</a> (three legged)
                            if apiInfo.settings && apiInfo.settings.enable_implicit_grant
                                li <a href="/help/oauth2_implicit_grant" target="_blank">Implicit Grant</a> (three legged)

                    if apiInfo.auth == "none"
                        p This API does not require authorization. Review the documentation below for more information.
                    
                    if apiInfo.bundle
                        .custom-hide
                            label API Bundle

                            p.
                                This API is part of the API Bundle "#{apiInfo.bundle}". Read more on API Bundles on the <a href="/help/bundles">API Bundle help page</a>.
                                Tokens created for any of the bundled APIs can be reused with <a href="/apis">any other API</a> of the same API bundle.

        .panel.panel-default
            .panel-heading
                +panelTitle('Description', '/help/api', '#apidescription')
            #apidescription.collapse.panel-collapse.in
                .panel-body
                    != apiDesc

                    - var apiDataString = JSON.stringify(glob.cortellisUi.cortelliesApi.InvestigationalApi)
                    - var apiData = JSON.parse(apiDataString)
                    - var apiIDs = apiData.map(obj => Object.values(obj))
                    
                    if (apiIDs.some(innerArray => innerArray.includes(apiInfo.id))) 
                        if CortellisApiKey !== null
                            if apiInfo.auth == "key-auth" && authUser && authUser.authenticated_scope.includes('wicked:api-cortellis-user') || authUser && authUser.admin && authUser.authenticated_scope.includes('wicked:api-cortellis-user') || authUser && authUser.superadmin && authUser.authenticated_scope.includes('wicked:api-cortellis-user')
                                a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?apikey=${CortellisApiKey}&url=${encodeURIComponent(genericSwaggerUrl)}` role="button" target="_blank").btn.btn-default View Technical Documentation/ Swagger Definition &raquo;
                        else 
                            if apiInfo.auth == "key-auth" && authUser && authUser.authenticated_scope.includes('wicked:api-cortellis-user') || authUser && authUser.admin && authUser.authenticated_scope.includes('wicked:api-cortellis-user') || authUser && authUser.superadmin && authUser.authenticated_scope.includes('wicked:api-cortellis-user')
                                a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?url=${encodeURIComponent(genericSwaggerUrl)}` role="button" target="_blank").btn.btn-default View Technical Documentation/ Swagger Definition &raquo;
                            else if apiInfo.auth == "none" && authUser && authUser.authenticated_scope.includes('wicked:api-cortellis-user') || authUser && authUser.admin && authUser.authenticated_scope.includes('wicked:api-cortellis-user') || authUser && authUser.superadmin && authUser.authenticated_scope.includes('wicked:api-cortellis-user')
                                a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?url=${encodeURIComponent(genericSwaggerUrl)}` role="button" target="_blank").btn.btn-default View Technical Documentation/ Swagger Definition &raquo;
                    //- HIDE swagger Button {"not logged in User} and {User not part of Cortellis Data Group}/        
                    else if !authUser || (apiInfo.auth == "none") && (authUser && !authUser.authenticated_scope.includes('wicked:api-cortellis-user') || authUser.authenticated_scope.includes('wicked:api-cortellis-user'))
                        a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?apikey=none&url=${encodeURIComponent(genericSwaggerUrl)}` role="button" target="_blank").btn.btn-default View Technical Documentation/ Swagger Definition &raquo;
                    //-Swagger Button will set defult for NON COrtellis-api-colection apis documentations related APis/
                    else
                        a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?url=${encodeURIComponent(genericSwaggerUrl)}` role="button" target="_blank").btn.btn-default View Technical Documentation/ Swagger Definition &raquo;
        
        if !authUser && apiInfo.auth != "none"
            .panel.panel-danger.custom-hide
                .panel-heading
                    h4.panel-title Not logged in
                .panel-body
                    p.
                        You are currently not logged in, so we can't display your registered applications.
                        Please log in first.
                    p                    
                        a(href=`/login?redirect=/apis/${apiInfo.id}`).btn.btn-default Log in &raquo;

        else if apiInfo.auth != "none" && !partnerOnly
            .panel.panel-default.custom-hide
                .panel-heading.custom-hide
                    +panelTitle('Applications', '/help/api')
                .panel-body.custom-hide

                    -var redirectAuth = apiInfo.auth == "oauth2" && apiInfo.settings && (apiInfo.settings.enable_implicit_grant || apiInfo.settings.enable_authorization_code)
                    -var directAuth = apiInfo.auth == "oauth2" && apiInfo.settings && (apiInfo.settings.enable_client_credentials || apiInfo.settings.enable_password_grant)

                    if redirectAuth && !apiInfo.hasSwaggerApplication
                        p.
                            This API supports three legged authorization (using the <a href="/help/oauth2_authorization_code" target="_blank">Authorization Code Grant</a>
                            or the <a href="/help/oauth2/implicit_grant" target="_blank">Implicit Grant</a>). In order to
                            test this API using Swagger UI, you will need to register a special application for Swagger UI (with a specific redirect URI to
                            be called back correctly).
                        a(href='/applications?register=true&swagger=true').btn.btn-success Swagger UI setup!
                        br
                        br
                    if redirectAuth && directAuth
                        p.
                            <b>Please note</b>: This API supports both three legged and two legged authorization; you will be able to test the API using
                            the direct authorization methods (<a href="/help/oauth2_client_credentials" target="_blank">Client Credentials</a> or 
                            <a href="/help/oauth2_password_grant" target="_blank">Resource Owner Password Grant</a>, whichever is available on the API), using
                            any application. If you want to test the <a href="/help/oauth2_authorization_code" target="_blank">Authorization Code Grant</a>
                            or the <a href="/help/oauth2/implicit_grant" target="_blank">Implicit Grant</a> using the API Portal, this is only possible using the 
                            special Swagger UI application.
            
                    if applications.length == 0
                        p You do not have any registered applications yet. Please create an application first.
                    else
                        table.table.table-striped
                            thead
                                tr
                                    th Application
                                    th Plan
                                    th <a href="/help/trusted" target="_blank">Trusted</a>
                                    if apiInfo.auth == "key-auth"
                                        th(colspan=2) API Key (Header <code>#{glob.api.headerName}</code>)
                                    else if apiInfo.auth == "oauth2"
                                        th Client ID
                                        th Client Secret
                                    else
                                        th n/a
                                    th Action
                                    th Try it!
                            tbody
                                for app in applications
                                    tr
                                        // Application
                                        td(style='vertical-align:middle;')
                                            a(href=`/applications/${app.id}`)= app.name
                                        // Plan, API Key or Client ID/Secret
                                        if app.hasSubscription
                                            td(style='vertical-align:middle;')
                                                if app.plan && app.plan.name
                                                    a(href='#' data-toggle='popover' data-trigger='hover' title=app.plan.name data-content=app.plan.desc)= app.plan.name
                                                else
                                                    i Inaccessible plan
                                            if app.subscriptionApproved
                                                if apiInfo.auth == "key-auth"
                                                    td(style='max-width:50px') ---
                                                    td(colspan=2 style='max-width:400px')
                                                        input(readonly type='password' data-toggle='password' value=app.apiKey).form-control
                                                else if apiInfo.auth == "oauth2"
                                                    td(style='max-width:50px')= app.subscriptionTrusted ? 'Yes' : '---'
                                                    td(style='max-width:250px')
                                                        input(readonly type='password' data-toggle='password' value=app.clientId).form-control
                                                    td(style='max-width:250px')
                                                        input(readonly type='password' data-toggle='password' value=app.clientSecret).form-control
                                            else
                                                
                                                td ---
                                                td(colspan=2 style='vertical-align:middle;')
                                                    i Subscription approval is pending
                                        else
                                            td ---
                                            td ---
                                            td(colspan=2 style='vertical-align:middle;')
                                                i Application currently not subscribed
                                        // Action
                                        if app.mayUnsubscribe
                                            td
                                                form(role='form' action=`/applications/${app.id}/unsubscribe/${apiInfo.id}` method='POST' onsubmit='return confirmUnsubscribe();')
                                                    button(type='submit').btn.btn-danger.btn-block Unsubscribe &raquo;
                                        else if app.maySubscribe
                                            td
                                                a(href=`/applications/${app.id}/subscribe/${apiInfo.id}`).btn.btn-success.btn-block Subscribe &raquo;
                                        else if app.subscribeError
                                            td
                                                i= app.subscribeError
                                        else
                                            td &nbsp;
                                        // Try it!
                                        if app.hasSubscription && app.subscriptionApproved
                                            td
                                                if apiInfo.auth == "key-auth"
                                                    a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?apikey=${app.apiKey}&url=${app.swaggerLink}` target='_blank').btn.btn-default Try it!
                                                else if apiInfo.auth == "oauth2" && app.redirectUri && app.redirectUri.indexOf("swagger-ui/oauth2-redirect.html") > 0
                                                    a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?client_id=${app.clientId}&client_secret=${app.clientSecret}&url=${app.swaggerLink}&application=${app.id}&redirect_uri=${app.redirectUri}` target='_blank').btn.btn-default Try it!
                                                else if apiInfo.auth == "oauth2" && directAuth
                                                    a(href=`${glob.network.schema}://${glob.network.apiHost}/swagger-ui/?client_id=${app.clientId}&client_secret=${app.clientSecret}&url=${app.swaggerLink}&application=${app.id}` target='_blank').btn.btn-default Try it!
                                                else if apiInfo.auth == "oauth2" && redirectAuth && !apiInfo.hasSwaggerApplication
                                                    a(href='/applications?register=true&swagger=true').btn.btn-default Swagger UI setup!
                                                else
                                                    | ---
                                        else
                                            td(style='vertical-align:middle;') ---


                    p Need an additional application? Click the button below.

                    a(href="/applications?register=true").btn.btn-default Register Application &raquo;

            if authUser.admin
                .panel.panel-success.custom-hide
                    .panel-heading
                        +panelTitle('All Subscriptions (Admin only)', null, '#admin_subscriptions')
                    #admin_subscriptions.collapse.panel-collapse
                        .panel-body
                            if apiSubscriptions && apiSubscriptions.length > 0
                                p This is a global list of all applications subscribed to this API:

                                ul
                                    for subscribedApp in apiSubscriptions
                                        li <a href='/applications/#{subscribedApp.application}'>#{subscribedApp.application}</a> (Plan: #{subscribedApp.plan})

                                p
                                    a(href=`/admin/apis/${apiInfo.id}/subscriptions_csv`).btn.btn-success Download as CSV

                                br

                                .panel.panel-danger.custom-hide
                                    .panel-heading
                                        +panelTitle('Super Danger Zone', null, '#admin_superdanger')
                                    #admin_superdanger.collapse.panel-collapse
                                        .panel-body
                                            p.
                                                In preparation of a retraction of an API, you may (as an Admin) here delete all subscriptions to this API.
                                                Please be aware of the consequense for your users: <b>Applications using the API will no longer function</b>
                                                (as the subscription is no longer available).
                                            if apiInfo.deprecated
                                                form(role='form' method='POST' action=`/admin/apis/${apiInfo.id}/delete_subscriptions` onsubmit='return confirmDeleteSubscriptions();')
                                                    button(type='submit').btn.btn-danger Delete Subscriptions
                                            else
                                                p(style='color:red')
                                                    strong This is only possible for APIs already marked as <code>deprecated</code>.
                            else
                                p <i>There are no subscriptions to this API.</i>
